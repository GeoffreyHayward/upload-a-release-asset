# A demo workflow that builds a demo distribution and uploads it to a release.
# Note that your workflow can have any number of distribution assets!
name: Release Actoins Workflow

on:
  release:
    types: [published]

jobs:
  #
  # Demo build steps
  #
  build_stage:
    name: "Demo Build"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pretend to Build
        run: echo "Pretend to build something here."

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v3
        with:
          name: demo-artifact
          path: dist/


  add_assets_to_release:
    name: "Add the Release Assets"
    needs:
      - build_stage # Wait for all build jobs to complete. In this demo just one.
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      # Checkout is required for accessing the local upload-release-asset action.
      - name: Checkout
        uses: actions/checkout@v3

      # Get the asset(s) from the demo build job.
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          path: all-artifacts

      # prepare the distribution(s)/asset(s) ready for upload.
      - name: Zip Demo Distribution
        run: |
          echo ${{ github.ref_name }} > version
          zip -r ../demo-asset.zip .
        working-directory: ${{steps.download.outputs.download-path}}/demo-artifact


      # Call the local upload-release-asset action.
      - name: Upload Release Asset
        id: upload_release_asset
        uses: ./.github/actions/upload-release-asset
        with:
          upload_url: ${{ github.event.release.upload_url }}
          upload_url_token: ${{ secrets.GITHUB_TOKEN }}
          asset_path: ${{steps.download.outputs.download-path}}/demo-asset.zip
          asset_name: demo-dist-${{ github.ref_name }}.zip


      # This archived response could be very useful in a real shipping step, hence it's included in this demo.
      - name: Save the GitHub API response to file
        run: echo "${{ steps.upload_release_asset.outputs.response }}" > response.json
      - name: Archive API Response
        uses: actions/upload-artifact@v3
        with:
          name: response.json
          path: response.json


  #
  # Demo shipping step
  #
  ship_it:
    name: "Ship It!"
    needs:
      - build_stage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Pretend to ship it
        run: echo "Pretending to ship it. Bon Voyage!"
