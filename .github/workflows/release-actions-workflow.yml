# A working demo that attaches this repositories core assets to releases.
name: Release Actoins Workflow

on:
  release:
    types: [published]

jobs:
  #
  # Get the release assets.
  #
  get_the_assets:
    name: "Get Assets"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Archive the 'upload-release-asset' Action
        uses: actions/upload-artifact@v3
        with:
          name: upload-release-asset
          path: .github/actions/

      - name: Archive the repostiroy's LICENSE
        uses: actions/upload-artifact@v3
        with:
          name: LICENSE
          path: LICENSE


  add_assets_to_release:
    name: "Add the Release Assets"
    needs:
      - build_stage # Wait for all build jobs to complete. In this demo just one.
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      # Checkout is required for accessing the local upload-release-asset action.
      - name: Checkout
        uses: actions/checkout@v3

      # Get the asset(s) from the demo build job.
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          path: all-artifacts

      # prepare the distribution(s)/asset(s) ready for upload.
      - name: Zip the 'upload release asset' action
        run: |
          echo ${{ github.ref_name }} > version
          zip -r ../upload-release-asset.zip .
        working-directory: ${{steps.download.outputs.download-path}}/upload-release-asset


      # Call the local upload-release-asset action.
      - name: Upload 'upload-release-asset'
        id: upload_release_asset
        uses: ./.github/actions/upload-release-asset
        with:
          upload_url: ${{ github.event.release.upload_url }}
          upload_url_token: ${{ secrets.GITHUB_TOKEN }}
          asset_path: ${{steps.download.outputs.download-path}}/upload-release-asset.zip
          asset_name: upload-release-asset-${{ github.ref_name }}.zip

      - name: Upload LICENSE
          id: upload_license
          uses: ./.github/actions/upload-release-asset
          with:
            upload_url: ${{ github.event.release.upload_url }}
            upload_url_token: ${{ secrets.GITHUB_TOKEN }}
            asset_path: ${{steps.download.outputs.download-path}}/upload-release-asset.zip
            asset_name: LICENSE


      # Archived the responses as they could be very useful in a real shipping step, hence it's included in this demo.
      - name: Save the GitHub API response to file (upload-release-asset)
        run: echo "${{ steps.upload_release_asset.outputs.response }}" > upload-release-asset-response.json
      - name: Archive Response (upload-release-asset)
        uses: actions/upload-artifact@v3
        with:
          name: upload-release-asset-response.json
          path: upload-release-asset-response.json
      - name: Save the GitHub API response to file (LICENSE)
        run: echo "${{ steps.upload_license.outputs.response }}" > upload_license-response.json
      - name: Archive Response (LICENSE)
        uses: actions/upload-artifact@v3
        with:
          name: upload_license-response.json
          path: upload_license-response.json


  #
  # Demo shipping step
  #
  ship_it:
    name: "Ship It!"
    needs:
      - build_stage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Pretend to ship it
        run: echo "Pretending to ship it. Bon Voyage!"
